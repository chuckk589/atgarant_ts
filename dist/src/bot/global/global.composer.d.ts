import { AppConfigService } from 'src/app-config/app-config.service';
import { BaseComposer, BotContext } from 'src/types/interfaces';
import { offerController } from '../offer-menu/offer.controller';
import { globalService } from './global.service';
import { AppEventsController } from '../../app-events/app-events.controller';
import { PinoLogger } from 'nestjs-pino';
import { OfferEditMenuController } from 'src/bot/offer-edit-menu/offer-edit-menu.controller';
import { ArbEditMenuController } from 'src/bot/arb-edit-menu/arb-edit-menu.controller';
export declare class globalComposer extends BaseComposer {
    private readonly globalService;
    private readonly AppConfigService;
    private readonly offerController;
    private readonly OfferEditMenuController;
    private readonly ArbEditMenuController;
    private readonly AppEventsController;
    private readonly logger;
    constructor(globalService: globalService, AppConfigService: AppConfigService, offerController: offerController, OfferEditMenuController: OfferEditMenuController, ArbEditMenuController: ArbEditMenuController, AppEventsController: AppEventsController, logger: PinoLogger);
    mode: string;
    url: string;
    menu: import("@grammyjs/menu").Menu<import("grammy").Context>;
    menu1: import("@grammyjs/menu").Menu<import("grammy").Context>;
    menu2: import("@grammyjs/menu").Menu<import("grammy").Context>;
    start: (ctx: BotContext) => Promise<void>;
    back: (ctx: BotContext) => Promise<void>;
    offers: (ctx: BotContext) => Promise<void>;
    createOffer: (ctx: BotContext) => Promise<void>;
    arbitraries: (ctx: BotContext) => Promise<void>;
    allOffers: (ctx: BotContext) => Promise<void>;
    activeOffers: (ctx: BotContext) => Promise<void>;
    activeArbitraries: (ctx: BotContext) => Promise<void>;
    allArbitraries: (ctx: BotContext) => Promise<void>;
    account: (ctx: BotContext) => Promise<void>;
    web: (ctx: BotContext) => Promise<void>;
    rules: (ctx: BotContext) => Promise<import("@grammyjs/types").Message.TextMessage>;
    instructions: (ctx: BotContext) => Promise<import("@grammyjs/types").Message.TextMessage>;
    info: (ctx: BotContext) => Promise<import("@grammyjs/types").Message.TextMessage>;
    findUser: (ctx: BotContext) => Promise<import("@grammyjs/types").Message.TextMessage>;
    changeLang: (ctx: BotContext) => Promise<import("@grammyjs/types").Message.TextMessage>;
    inline_query: (ctx: BotContext) => Promise<void>;
    callbackHandler: (ctx: BotContext) => Promise<import("@grammyjs/types").Message.TextMessage>;
}
