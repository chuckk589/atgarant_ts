import { AppConfigService } from "src/app-config/app-config.service";
import { BaseComposer, BotContext } from "src/types/interfaces";
import { offerController } from "../offer-menu/offer.controller";
import { globalService } from './global.service';
import { AppEventsController } from '../../app-events/app-events.controller';
import { PinoLogger } from "nestjs-pino";
import { OfferEditMenuController } from 'src/bot/offer-edit-menu/offer-edit-menu.controller';
import { ArbEditMenuController } from 'src/bot/arb-edit-menu/arb-edit-menu.controller';
export declare class globalComposer extends BaseComposer {
    private readonly globalService;
    private readonly AppConfigService;
    private readonly offerController;
    private readonly OfferEditMenuController;
    private readonly ArbEditMenuController;
    private readonly AppEventsController;
    private readonly logger;
    constructor(globalService: globalService, AppConfigService: AppConfigService, offerController: offerController, OfferEditMenuController: OfferEditMenuController, ArbEditMenuController: ArbEditMenuController, AppEventsController: AppEventsController, logger: PinoLogger);
    mode: string;
    url: string;
    menu: import("../plugins/menu/menu-extended").Menu<import("grammy").Context>;
    menu1: import("../plugins/menu/menu-extended").Menu<import("grammy").Context>;
    menu2: import("../plugins/menu/menu-extended").Menu<import("grammy").Context>;
    start: Function;
    back: Function;
    offers: Function;
    createOffer: Function;
    arbitraries: Function;
    allOffers: (ctx: BotContext) => Promise<void>;
    activeOffers: (ctx: BotContext) => Promise<void>;
    activeArbitraries: Function;
    allArbitraries: Function;
    account: Function;
    rules: Function;
    instructions: Function;
    info: Function;
    findUser: Function;
    changeLang: Function;
    inline_query: Function;
    callbackHandler: (ctx: BotContext) => Promise<import("@grammyjs/types").Message.TextMessage>;
}
